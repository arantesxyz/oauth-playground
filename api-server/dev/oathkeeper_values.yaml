# image:
#   repository: oryd/oathkeeper
#   tag: v0.40.0
# sidecar:
#   image:
#     repository: oryd/oathkeeper-maester
#     tag: v0.1.7
maester:
  enabled: false
  nameOverride: kubricks-oathkeeper-maester
deployment:
  automountServiceAccountToken: true
oathkeeper:
  mutatorIdTokenJWKs: |
    {
      "keys": [
        {
          "use": "sig",
          "kty": "RSA",
          "kid": "a2aa9739-d753-4a0d-87ee-61f101050277",
          "alg": "RS256",
          "n": "zpjSl0ySsdk_YC4ZJYYV-cSznWkzndTo0lyvkYmeBkW60YHuHzXaviHqonY_DjFBdnZC0Vs_QTWmBlZvPzTp4Oni-eOetP-Ce3-B8jkGWpKFOjTLw7uwR3b3jm_mFNiz1dV_utWiweqx62Se0SyYaAXrgStU8-3P2Us7_kz5NnBVL1E7aEP40aB7nytLvPhXau-YhFmUfgykAcov0QrnNY0DH0eTcwL19UysvlKx6Uiu6mnbaFE1qx8X2m2xuLpErfiqj6wLCdCYMWdRTHiVsQMtTzSwuPuXfH7J06GTo3I1cEWN8Mb-RJxlosJA_q7hEd43yYisCO-8szX0lgCasw",
          "e": "AQAB",
          "d": "x3dfY_rna1UQTmFToBoMn6Edte47irhkra4VSNPwwaeTTvI-oN2TO51td7vo91_xD1nw-0c5FFGi4V2UfRcudBv9LD1rHt_O8EPUh7QtAUeT3_XXgjx1Xxpqu5goMZpkTyGZ-B6JzOY3L8lvWQ_Qeia1EXpvxC-oTOjJnKZeuwIPlcoNKMRU-mIYOnkRFfnUvrDm7N9UZEp3PfI3vhE9AquP1PEvz5KTUYkubsfmupqqR6FmMUm6ulGT7guhBw9A3vxIYbYGKvXLdBvn68mENrEYxXrwmu6ITMh_y208M5rC-hgEHIAIvMu1aVW6jNgyQTunsGST3UyrSbwjI0K9UQ",
          "p": "77fDvnfHRFEgyi7mh0c6fAdtMEMJ05W8NwTG_D-cSwfWipfTwJJrroWoRwEgdAg5AWGq-MNUzrubTVXoJdC2T4g1o-VRZkKKYoMvav3CvOIMzCBxBs9I_GAKr5NCSk7maksMqiCTMhmkoZ5RPuMYMY_YzxKNAbjBd9qFLfaVAqs",
          "q": "3KEmPA2XQkf7dvtpY1Xkp1IfMV_UBdmYk7J6dB5BYqzviQWdEFvWaSATJ_7qV1dw0JDZynOgipp8gvoL-RepfjtArhPz41wB3J2xmBYrBr1sJ-x5eqAvMkQk2bd5KTor44e79TRIkmkFYAIdUQ5JdVXPA13S8WUZfb_bAbwaCBk",
          "dp": "5uyy32AJkNFKchqeLsE6INMSp0RdSftbtfCfM86fZFQno5lA_qjOnO_avJPkTILDT4ZjqoKYxxJJOEXCffNCPPltGvbE5GrDXsUbP8k2-LgWNeoml7XFjIGEqcCFQoohQ1IK4DTDN6cmRh76C0e_Pbdh15D6TydJEIlsdGuu_kM",
          "dq": "aegFNYCEojFxeTzX6vIZL2RRSt8oJKK-Be__reu0EUzYMtr5-RdMhev6phFMph54LfXKRc9ZOg9MQ4cJ5klAeDKzKpyzTukkj6U20b2aa8LTvxpZec6YuTVSxxu2Ul71IGRQijTNvVIiXWLGddk409Ub6Q7JqkyQfvdwhpWnnUk",
          "qi": "P68-EwgcRy9ce_PZ75c909cU7dzCiaGcTX1psJiXmQAFBcG0msWfsyHGbllOZG27pKde78ORGJDYDNk1FqTwsogZyCP87EiBmOoqXWnMvKYfJ1DOx7x42LMAGwMD3bgQj9jgRACxFJG4n3NI6uFlFruyl_CLQzwW_rQFHshLK7Q"
        }
      ]
    }
  managedAccessRules: true
  config:
    log:
      level: debug
    serve:
      proxy:
        tls:
          cert:
            base64: ""
          key:
            base64: ""
        port: 4455
    access_rules:
      matching_strategy: regexp
    authenticators:
      anonymous:
        enabled: true
        config:
          subject: guest

      cookie_session:
        enabled: true
        config:
          check_session_url: http://oauth-stack-kratos-public/sessions/whoami
          preserve_path: true
          extra_from: "@this"
          subject_from: "identity.id"
          only:
            - ory_kratos_session

      oauth2_introspection:
        enabled: true
        config:
          introspection_url: http://oauth-stack-hydra-admin:4445/admin/oauth2/introspect
          # scope_strategy: exact

      noop:
        enabled: true

    authorizers:
      allow:
        enabled: true
      # remote_json:
      #   enabled: true
      #   config:
      #     remote: http://kubricks-keto-read/relation-tuples/check
      #     payload: |
      #       {
      #         "subject": "{{ print .Subject }}",
      #         "resource": "{{ printIndex .MatchContext.RegexpCaptureGroups 0 }}"
      #       }
    mutators:
      noop:
        enabled: true

      id_token:
        enabled: true
        config:
          issuer_url: http://127.0.0.1:4455/
          jwks_url: file:///etc/secrets/mutator.id_token.jwks.json
          claims: |
            {
              "session": {{ .Extra | toJson }}
            }
      header:
        enabled: true
        config:
          headers: {}
      hydrator:
        enabled: true
        config:
          api:
            url: http://temp-go-mimir/
    errors:
      fallback:
        - json
      handlers:
        redirect:
          enabled: true
          config:
            to: https://kratos.mimir-cloud.pluraldev.sh/login
            when:
              - error:
                  - unauthorized
                  - forbidden
                request:
                  header:
                    accept:
                      # We don't want this for application/json requests, only browser requests!
                      - text/html
        json:
          enabled: true
          config:
            verbose: true

ingress:
  proxy:
    enabled: false
    className: nginx
    annotations:
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    hosts:
      - host: kratos.mimir-cloud.pluraldev.sh
        paths:
          - path: /
            pathType: ImplementationSpecific
      - host: mimir.mimir-cloud.pluraldev.sh
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - hosts:
          - kratos.mimir-cloud.pluraldev.sh
          - mimir.mimir-cloud.pluraldev.sh
        secretName: kubricks-oathkeeper-proxy-tls
